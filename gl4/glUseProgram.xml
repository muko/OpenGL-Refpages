<!DOCTYPE refentry [ <!ENTITY % mathent SYSTEM "math.ent"> %mathent; ]>

<!-- Converted by db4-upgrade version 1.1 -->

<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="glUseProgram">
    <info>
        <copyright>
            <year>2003-2005</year>
            <holder>3Dlabs Inc. Ltd.</holder>
        </copyright>
        <copyright>
            <year>2010-2014</year>
            <holder>Khronos Group</holder>
        </copyright>
    </info>
    <refmeta>
        <refentrytitle>glUseProgram</refentrytitle>
        <manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>glUseProgram</refname>
        <refpurpose lang="en">Installs a program object as part of current rendering state</refpurpose>
        <refpurpose lang="ja">カレントのレンダリング状態の一部としてプログラムオブジェクトをインストールします</refpurpose>
    </refnamediv>
    <refsynopsisdiv><title>C Specification</title>
        <funcsynopsis>
            <funcprototype>
                <funcdef>void <function>glUseProgram</function></funcdef>
                <paramdef>GLuint <parameter>program</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
    </refsynopsisdiv>
    <refsect1 xml:id="parameters"><title>Parameters</title>
        <variablelist>
            <varlistentry>
                <term><parameter>program</parameter></term>
                <listitem>
                    <para lang="en">Specifies the handle of the program object
                    whose executables are to be used as part of current
                    rendering state.</para>
                    <para lang="ja">
                    カレントの描画状態の一部として使用される実行可能オブジェクトを持つプログラムオブジェクトのハンドルを指定します。
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsect1>
    <refsect1 xml:id="description"><title>Description</title>
        <para lang="en"><function>glUseProgram</function> installs the program
        object specified by <parameter>program</parameter> as part of
        current rendering state. One or more executables are created in
        a program object by successfully attaching shader objects to it
        with
        <citerefentry><refentrytitle>glAttachShader</refentrytitle></citerefentry>,
        successfully compiling the shader objects with
        <citerefentry><refentrytitle>glCompileShader</refentrytitle></citerefentry>,
        and successfully linking the program object with
        <citerefentry><refentrytitle>glLinkProgram</refentrytitle></citerefentry>.
        </para>
        <para lang="ja"><function>glUseProgram</function> は、カレントの描画状態の一部として <parameter>program</parameter> で指定されたプログラムオブジェクトをインストールします。
        <citerefentry><refentrytitle>glAttachShader</refentrytitle></citerefentry> でシェーダーオブジェクトを正常にアタッチし、
        <citerefentry><refentrytitle>glCompileShader</refentrytitle></citerefentry> でシェーダーオブジェクトを正常にコンパイルし、
        <citerefentry><refentrytitle>glLinkProgram</refentrytitle></citerefentry> でプログラムオブジェクトを正常にリンクすることにより、
        プログラムオブジェクトに1つ以上の実行可能なプログラムが作成されます。
        </para>

        <para lang="en">A program object will contain an executable that will run
        on the vertex processor if it contains one or more shader
        objects of type <constant>GL_VERTEX_SHADER</constant> that have
        been successfully compiled and linked. A program object will contain an
        executable that will run on the geometry processor if it contains one or
        more shader objects of type <constant>GL_GEOMETRY_SHADER</constant> that
        have been successfully compiled and linked.
        Similarly, a program object will contain an executable that will run on the
        fragment processor if it contains one or more shader objects of type
        <constant>GL_FRAGMENT_SHADER</constant> that have been
        successfully compiled and linked.</para>
        <para lang="ja">プログラムオブジェクトには、正常にコンパイル及びリンクされた <constant>GL_VERTEX_SHADER</constant> タイプのシェーダーオブジェクトが一つ以上含まれている場合、バーテックスプロセッサーで実行される実行可能オブジェクトが含まれます。
        プログラムオブジェクトには、正常にコンパイルおよびリンクされた <constant>GL_GEOMETRY_SHADER</constant> タイプの1つ以上のシェーダーオブジェクトが含まれている場合、ジオメトリプロセッサーで実行される実行可能オブジェクトが含まれます。
        同様に、プログラムオブジェクトには、正常にコンパイルおよびリンクされた <constant>GL_FRAGMENT_SHADER</constant> タイプの1つ以上のシェーダーオブジェクトが含まれている場合、フラグメントプロセッサーで実行される実行可能オブジェクトが含まれます。</para>

        <para lang="en">While a program object is in use, applications are free to
        modify attached shader objects, compile attached shader objects,
        attach additional shader objects, and detach or delete shader
        objects. None of these operations will affect the executables
        that are part of the current state. However, relinking the
        program object that is currently in use will install the program
        object as part of the current rendering state if the link
        operation was successful (see
        <citerefentry><refentrytitle>glLinkProgram</refentrytitle></citerefentry>
        ). If the program object currently in use is relinked
        unsuccessfully, its link status will be set to
        <constant>GL_FALSE</constant>, but the executables and
        associated state will remain part of the current state until a
        subsequent call to <function>glUseProgram</function> removes it
        from use. After it is removed from use, it cannot be made part
        of current state until it has been successfully relinked.</para>
        <para lang="ja">プログラムオブジェクトの使用中、アプリケーションは、接続されたシェーダーオブジェクトの変更、接続されたシェーダーオブジェクトのコンパイル、追加のシェーダーオブジェクトの接続、シェーダーオブジェクトのデタッチまたは削除を自由に行えます。
        これらの操作は、カレントの状態の一部である実行可能オブジェクトには影響しません。
        ただし、現在使用中のプログラムオブジェクトを再リンクしてリンク操作が成功した場合、現在のレンダリング状態の一部としてプログラムオブジェクトがインストールされます（<citerefentry><refentrytitle>glLinkProgram</refentrytitle></citerefentry> 参照）。
        現在使用中のプログラムオブジェクトが正常に再リンクされない場合、そのリンクステータスは <constant>GL_FALSE</constant> に設定されますが、実行可能オブジェクトおよび関連する状態は、<function>glUseProgram</function> の後続の呼び出しによって使用状態から削除されるまで、カレントの状態の一部のままです。
        使用状態から削除された後、正常に再リンクされるまで、カレントの状態の一部にすることはできません。
        </para>

        <para lang="en">If <parameter>program</parameter> is zero, then the current rendering
        state refers to an <emphasis>invalid</emphasis> program object and the
        results of shader execution are undefined. However, this is not an error.</para>
        <para lang="ja"><parameter>program</parameter> が 0 の場合、カレントの描画状態は無効なプログラムオブジェクトを参照しており、シェーダーの実行結果は未定義です。
        ただし、これはエラーではありません。
        </para>

        <para lang="en">If <parameter>program</parameter> does not
        contain shader objects of type <constant>GL_FRAGMENT_SHADER</constant>, an
        executable will be installed on the vertex, and possibly geometry processors,
        but the results of fragment shader execution will be undefined.</para>
        <para lang="ja"><parameter>program</parameter> に <constant>GL_FRAGMENT_SHADER</constant> タイプのシェーダーオブジェクトが含まれていない場合、実行可能オブジェクトはバーテックスプロセッサー、場合によってはジオメトリプロセッサーにインストールされますが、フラグメントシェーダーの実行結果は未定義になります。</para>

    </refsect1>
    <refsect1 xml:id="notes"><title>Notes</title>
        <para>Like buffer and texture objects, the name space for
        program objects may be shared across a set of contexts, as long
        as the server sides of the contexts share the same address
        space. If the name space is shared across contexts, any attached
        objects and the data associated with those attached objects are
        shared as well.</para>

        <para>Applications are responsible for providing the
        synchronization across API calls when objects are accessed from
        different execution threads.</para>

    </refsect1>
    <refsect1 xml:id="errors"><title>Errors</title>
        <para><constant>GL_INVALID_VALUE</constant> is generated if
        <parameter>program</parameter> is neither 0 nor a value
        generated by OpenGL.</para>

        <para><constant>GL_INVALID_OPERATION</constant> is generated if
        <parameter>program</parameter> is not a program object.</para>

        <para><constant>GL_INVALID_OPERATION</constant> is generated if
        <parameter>program</parameter> could not be made part of current
        state.</para>

        <para><constant>GL_INVALID_OPERATION</constant> is generated if
        transform feedback mode is active.</para>

    </refsect1>
    <refsect1 xml:id="associatedgets"><title>Associated Gets</title>
        <para><citerefentry><refentrytitle>glGet</refentrytitle></citerefentry>
        with the argument <constant>GL_CURRENT_PROGRAM</constant></para>

        <para><citerefentry><refentrytitle>glGetActiveAttrib</refentrytitle></citerefentry>
        with a valid program object and the index of an active attribute
        variable</para>

        <para><citerefentry><refentrytitle>glGetActiveUniform</refentrytitle></citerefentry>
        with a valid program object and the index of an active uniform
        variable</para>

        <para><citerefentry><refentrytitle>glGetAttachedShaders</refentrytitle></citerefentry>
        with a valid program object</para>

        <para><citerefentry><refentrytitle>glGetAttribLocation</refentrytitle></citerefentry>
        with a valid program object and the name of an attribute
        variable</para>

        <para><citerefentry><refentrytitle>glGetProgram</refentrytitle></citerefentry>
        with a valid program object and the parameter to be queried</para>

        <para><citerefentry><refentrytitle>glGetProgramInfoLog</refentrytitle></citerefentry>
        with a valid program object</para>

        <para><citerefentry><refentrytitle>glGetUniform</refentrytitle></citerefentry>
        with a valid program object and the location of a uniform
        variable</para>

        <para><citerefentry><refentrytitle>glGetUniformLocation</refentrytitle></citerefentry>
        with a valid program object and the name of a uniform
        variable</para>

        <para><citerefentry><refentrytitle>glIsProgram</refentrytitle></citerefentry></para>
    </refsect1>
    <refsect1 xml:id="versions"><title>Version Support</title>
        <informaltable>
            <tgroup cols="13" align="left">
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="apifunchead.xml" xpointer="xpointer(/*/*)"/>
                <tbody>
                    <row>
                        <entry><function>glUseProgram</function></entry>
                        <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="apiversion.xml" xpointer="xpointer(/*/*[@role='20']/*)"/>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
    </refsect1>
    <refsect1 xml:id="seealso"><title>See Also</title>
        <para><citerefentry><refentrytitle>glAttachShader</refentrytitle></citerefentry>,
        <citerefentry><refentrytitle>glBindAttribLocation</refentrytitle></citerefentry>,
        <citerefentry><refentrytitle>glCompileShader</refentrytitle></citerefentry>,
        <citerefentry><refentrytitle>glCreateProgram</refentrytitle></citerefentry>,
        <citerefentry><refentrytitle>glDeleteProgram</refentrytitle></citerefentry>,
        <citerefentry><refentrytitle>glDetachShader</refentrytitle></citerefentry>,
        <citerefentry><refentrytitle>glLinkProgram</refentrytitle></citerefentry>,
        <citerefentry><refentrytitle>glUniform</refentrytitle></citerefentry>,
        <citerefentry><refentrytitle>glValidateProgram</refentrytitle></citerefentry>,
        <citerefentry><refentrytitle>glVertexAttrib</refentrytitle></citerefentry></para>
    </refsect1>
    <refsect1 xml:id="Copyright"><title>Copyright</title>
        <para>
            Copyright <trademark class="copyright"/> 2003-2005 3Dlabs Inc. Ltd.
            Copyright <trademark class="copyright"/> 2010-2014 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://opencontent.org/openpub/">http://opencontent.org/openpub/</link>.
        </para>
    </refsect1>
</refentry>
